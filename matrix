#!/bin/bash

# Name: Molly Johnson
# ONID: johnsmol
# CS 344 Fall 2018
# Due: 10/8/18
# Assignment 1
# All information used to implement this script is adapted
# from the OSU CS 344 Fall 2018 lectures unless otherwise
# specifically indicated.

# This is the dims function. This function will take a valid file as an argument or
# accept input from stdin. If the file is not readable or too many/few arguments
# are given, it will print an error message to stderr and return a value of 1. If
# the file or stdin input is valid, it will print the number of rows, a space, and
# then the number of columns to stdout and returns 0.

# read in from stdin and copy to file if no file passed in, otherwise copy file to temp
if [ $# == 1 ]
then
cat > tempInput$$
elif [ $# == 2 ]
then
cp $2 tempInput$$
fi

# loop through each row and increment counter variable to get num of rows
rowCount=0
while read myLine
do
	rowCount=$(expr $rowCount + 1)
done < tempInput$$ 

# -n added to prevent echo from printing newline
# adapted from: https://www.linuxquestions.org/questions/linux-newbie-8/bash-echo-followed-by-command-on-the-same-line-4175447966/
echo -n "$rowCount "

# head normally reads in first 10 lines of text from a file ($2). -1 added to make head
# only read in the first row. All tabs are then transformed into newlines, and the number
# of newlines counted (wc is word count, and the -l option makes it only give the line count). Hence
# the number of new lines counted + the original first line will equal the number of columns from the original file.
# adapted from: https://stackoverflow.com/questions/5761212/count-number-of-columns-in-bash/5761234
head -1 tempInput$$ | tr '\t' '\n' | wc -l
